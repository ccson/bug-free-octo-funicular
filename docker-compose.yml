version: '2.1'

services:

  postgres:
    image: 'postgres:11.12'
    container_name: db
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: app
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: app/backend
      args:
        UPLOADS_FOLDER: ${UPLOADS_FOLDER}
        COMPLETE_FOLDER: ${COMPLETE_FOLDER}
    container_name: backend
    restart: always
    environment:
      TMDB_API_KEY: ${TMDB_API_KEY}
      UPLOADS_FOLDER: ${UPLOADS_FOLDER}
      COMPLETE_FOLDER: ${COMPLETE_FOLDER}
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: curl -f -s http://localhost:80/health_check || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "8080:80"
    volumes:
      - $HOME${UPLOADS_FOLDER}:${UPLOADS_FOLDER}
      - $HOME${COMPLETE_FOLDER}:${COMPLETE_FOLDER}

  frontend:
    build:
      context: app/frontend
      args:
        REACT_APP_BACKEND_URL: ${BACKEND_URL}
    container_name: frontend
    restart: always
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "80:80"

  filesystem_poller:
    build:
      context: app/filesystem_poller
      args:
        UPLOADS_FOLDER: ${UPLOADS_FOLDER}
        COMPLETE_FOLDER: ${COMPLETE_FOLDER}
    container_name: filesystem_poller
    restart: always
    environment:
      UPLOADS_FOLDER: ${UPLOADS_FOLDER}
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - $HOME${UPLOADS_FOLDER}:${UPLOADS_FOLDER}
      - $HOME${COMPLETE_FOLDER}:${COMPLETE_FOLDER}
